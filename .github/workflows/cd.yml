name: CD

env:
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  DOCKER_TOKEN: ${{ secrets.DOCKER_TOKEN }}
  HOST: ${{ secrets.HOST }}
  USERNAME: ${{ secrets.USERNAME }}
  KEY: ${{ secrets.KEY }}
  PORT: ${{ secrets.PORT }}
  REPO_PATH: ${{ secrets.REPO_PATH }}

on:
  push:
    branches:
      - main
    paths:
      - .github/workflows/cd.yml
      - src/**
      - sql_scripts/**
      - docker/**
  # add manual trigger
  workflow_dispatch:

jobs:
  continuous-delivery:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./docker

    steps:
      - name: checkout repo
        uses: actions/checkout@v2

      - name: docker login
        run: docker login --username ${{ env.DOCKER_USERNAME }} --password ${{ env.DOCKER_TOKEN }}

      - name: docker pull latest images
        run: docker-compose pull

      - name: docker build
        run: docker-compose -f ./docker-compose.yml -f ./docker-compose.prod.yml build

      - name: determine api tag by version
        if: env.API_TAG == ''
        run: echo "API_TAG=$(jq -r .version ../package.json)" | tee -a $GITHUB_ENV

      - name: determine db tag by version
        if: env.DB_TAG == ''
        run: echo "DB_TAG=$(grep -oP '(\d+\.){2}\d+' ../sql_scripts/init.sql)" | tee -a $GITHUB_ENV

      - name: docker tag
        run: |
          docker tag ${{ env.DOCKER_USERNAME }}/aniskip-database:latest ${{ env.DOCKER_USERNAME }}/aniskip-database:${{ env.DB_TAG }} 
          docker tag ${{ env.DOCKER_USERNAME }}/aniskip-api:latest ${{ env.DOCKER_USERNAME }}/aniskip-api:${{ env.API_TAG }}

      - name: docker push with tag
        run: |
          docker push ${{ env.DOCKER_USERNAME }}/aniskip-database:${{ env.DB_TAG }} 
          docker push ${{ env.DOCKER_USERNAME }}/aniskip-api:${{ env.API_TAG }}

      - name: docker push with latest tag
        run: docker-compose -f ./docker-compose.yml -f ./docker-compose.prod.yml push
        
      - name: deploy to production
        uses: appleboy/ssh-action@master
        with:
          host: ${{ env.HOST }}
          username: ${{ env.USERNAME }}
          KEY: ${{ env.KEY }}
          port: ${{ env.PORT }}
          script: |
            cd ${{ env.REPO_PATH }}/docker
            ./stop.sh
            docker-compose pull
            ./start.sh prod
